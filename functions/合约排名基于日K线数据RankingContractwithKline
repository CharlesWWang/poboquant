def RankingContract(context,exchangecode,productcode,RankingCriteria):#期货合约排序函数 #基于上一交易日K线数据
    #exchangecode like "SHFE",productcode like "rb",RankingCriteria:1 for ranked by open interests,2 for ranking by trading volume
    #根据持仓量或成交量对期货合约进行排名
    contractlist=GetFuturesContracts(exchangecode,productcode) #获取主力合约排名
    contractlist={}.fromkeys(contractlist).keys()
    Rankedcontractlist=[]
    n=0
    if RankingCriteria==1: # to rank by open interests 根据持仓量排名
        n=1
    if RankingCriteria==2: # to rank by volume 根据成交量排名
        n=2
    for i in contractlist:       
        #print str(i)
        dyndatacontract=GetQuote(i)#对于开盘后查询
        cur_trade_day = GetCurrentTradingDate('SHFE')#查当前交易日
        pre_trade_day = GetPreviousTradingDate('SHFE',cur_trade_day)#根据当前交易日查上一个交易日
        print"days "+str(cur_trade_day)+" "+str(pre_trade_day)
        option = PBObj()
        option.EndDate = pre_trade_day
        option.Count=2
        klinedata = GetHisData(i, BarType.Day, option)
        #print "len(klinedata) " +str(len(klinedata))+" date "+str(klinedata[-1].datetime)+str(klinedata[-1].volume)
               
        if klinedata:#判断实时行情数据是否存在
            
            volume=klinedata[-1].volume
            openinterest=klinedata[-1].amount
            #datatime=klinedata[-1].datetime
#             print "price "+str(dyndatacontract.now)
#             print "volume"+str(volume)
#             print "openinterest"+str(openinterest)
#             print "data time "+str(datatime)
            if volume>0 and openinterest>0:#只对有成交和有持仓的期货合约进行排序

                Rankedcontractlist.append([i,openinterest,volume])
        
    ResultList=sorted(Rankedcontractlist, key=lambda Rankedcontractlist:(Rankedcontractlist[n]),reverse=True)
